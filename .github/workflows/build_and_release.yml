name: Build and release

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.result }}
      filename: ${{ steps.get-filename.outputs.filename }}
    steps:
      - name: Check out source
        uses: actions/checkout@v2
      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          java-package: jdk
      - name: cache gradle
        uses: actions/cache@v2
        with:
          path: ~/.gralde
          key: gradle-${{ hashFiles('build.gradle.kts') }}
          restore-keys: |
            gradle-${{ hashFiles('build.gradle.kts') }}
            gradle-
      - name: shadowJar
        run: ./gradlew shadowJar
      - name: get file name
        id: get-filename
        run: echo ::set-output name=filename::$(ls -1 ./build/libs/)
      - name: get version
        id: get-version-raw
        uses: thecodemonkey/action-get-gradle-version@master
        with:
          file: ./build.gradle.kts
      - name: format version string
        id: get-version
        uses: bluwy/substitute-string-action@v1
        with:
          _input-text: ${{ steps.get-version-raw.outputs.version }}
          '''': ""
      - run: echo ${{ steps.get-version.outputs.result }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: jar
          path: build/libs/${{ steps.get-filename.outputs.filename }}
          if-no-files-found: error
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: jar
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.version }}-${{ github.run_number }}
          release_name: ${{ needs.build.outputs.version }} ${{ github.event.head_commit.message }}
          body: ""
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ needs.build.outputs.filename }}
          asset_name: ${{ needs.build.outputs.filename }}
          asset_content_type: application/zip